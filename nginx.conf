# Nginx Configuration for OSM Web Application
# Compatible with Nginx 1.18+
# 
# Installation:
# 1. Copy this file to /etc/nginx/sites-available/osm-web
# 2. Create symlink: sudo ln -s /etc/nginx/sites-available/osm-web /etc/nginx/sites-enabled/
# 3. Test configuration: sudo nginx -t
# 4. Reload Nginx: sudo systemctl reload nginx

server {
    listen 80;
    listen [::]:80;
    
    # Replace with your domain name or use _ for default server
    server_name osm.example.com _;
    
    # Document root - adjust path to your installation directory
    root /var/www/osm-WEB;
    index index.html index.php;
    
    # Charset
    charset utf-8;
    
    # Logging
    access_log /var/log/nginx/osm-access.log;
    error_log /var/log/nginx/osm-error.log;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Main location block
    location / {
        try_files $uri $uri/ =404;
    }
    
    # PHP-FPM configuration
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        
        # PHP-FPM socket - adjust version if needed
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        
        # Alternative: TCP socket
        # fastcgi_pass 127.0.0.1:9000;
        
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        
        # Increase timeout for long-running scripts
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
    }
    
    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Deny access to backup and source files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Static files caching
    location ~* \.(jpg|jpeg|png|gif|ico|css|js|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, immutable";
        access_log off;
    }
    
    # Restrict access to sensitive files
    location ~ ^/(db|includes)/.*\.(sql|sh)$ {
        deny all;
        return 404;
    }
    
    # Specific PHP API locations with optimized settings
    location ~ ^/(php|m_capacitaciones/assets/php)/.*\.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        include fastcgi_params;
        fastcgi_read_timeout 300;
    }
    
    # File upload size limits
    client_max_body_size 20M;
    client_body_timeout 60s;
    
    # Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript 
               application/json application/javascript application/xml+rss 
               application/rss+xml font/truetype font/opentype 
               application/vnd.ms-fontobject image/svg+xml;
}

# SSL/TLS Configuration (uncomment and configure for HTTPS)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name osm.example.com;
#     
#     # SSL certificates
#     ssl_certificate /etc/letsencrypt/live/osm.example.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/osm.example.com/privkey.pem;
#     
#     # SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers HIGH:!aNULL:!MD5;
#     ssl_prefer_server_ciphers on;
#     ssl_session_cache shared:SSL:10m;
#     ssl_session_timeout 10m;
#     
#     # Include all settings from above server block
#     root /var/www/osm-WEB;
#     index index.html index.php;
#     
#     # ... (copy remaining configuration from HTTP block)
# }

# Redirect HTTP to HTTPS (uncomment when SSL is configured)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name osm.example.com;
#     return 301 https://$server_name$request_uri;
# }
